import{_ as s,o as n,c as a,f as e}from"./app-5uqBhi11.js";const t={},p=e(`<h1 id="规范-个人-搭建基础的vite-vue3-typescript项目" tabindex="-1"><a class="header-anchor" href="#规范-个人-搭建基础的vite-vue3-typescript项目" aria-hidden="true">#</a> 规范 &amp; 个人 &amp; 搭建基础的vite + vue3 + Typescript项目</h1><h2 id="官方脚手架" tabindex="-1"><a class="header-anchor" href="#官方脚手架" aria-hidden="true">#</a> 官方脚手架</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm init vite@latest
<span class="token comment">// 然后按照cli的提示步骤一步步执行即可</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="打包配置" tabindex="-1"><a class="header-anchor" href="#打包配置" aria-hidden="true">#</a> 打包配置</h2><blockquote><p>在vue文件中使用的变量，必须以<code>VITE_</code>开头</p></blockquote><ul><li><p>公共配置<code>.env</code></p></li><li><p>开发环境配置<code>.env.development</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">VITE_AXIOS_PREFIX</span> <span class="token operator">=</span> <span class="token string">&#39;/api&#39;</span>
<span class="token constant">VITE_AXIOS_BASEURL</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>生产环境配置<code>.env.production</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token constant">VITE_AXIOS_PREFIX</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token constant">VITE_AXIOS_BASEURL</span> <span class="token operator">=</span> <span class="token string">&#39;http://serverIp:serverPort&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>vue文件中使用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> projectName <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VITE_PRO_TITLE</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>自定义打包mode</p><blockquote><p>例如我们新增一个mode为<code>staging</code>的mode</p></blockquote><ul><li>在root目录下新增<code>.env.staging</code>文件</li><li>在<code>.env.staging</code>新增想配置的变量</li><li>修改<code>package.json</code>文件的脚本命令部分,添加以下一行命令<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;build:staging&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-tsc --noEmit &amp;&amp; vite build --mode test&quot;</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ul><h2 id="配置axios" tabindex="-1"><a class="header-anchor" href="#配置axios" aria-hidden="true">#</a> 配置axios</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm install axios
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>添加http文件夹，添加index.ts文件，status.ts文件，并添加相关的配置</li></ul><h2 id="配置项目路径的alias" tabindex="-1"><a class="header-anchor" href="#配置项目路径的alias" aria-hidden="true">#</a> 配置项目路径的alias</h2><ul><li>在<code>vite.config.ts</code>中配置<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;@&#39;</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>ts项目中需要在<code>tsconfig.json</code>添加如下配置<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 这里需要注意斜杠，[]中的所有路径以相对路径计算的（相对于服务根目录），所以不要以/开头</span>
<span class="token comment">// * 的含义代表所有</span>
<span class="token string-property property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span>
<span class="token string-property property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;@/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src/*&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token comment">// 在tsconfig.json文件中已经有了include字段了，一般定义已经够用，如果有规则之外的文件需要添加，那则需要自己手动添加匹配</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="pinia" tabindex="-1"><a class="header-anchor" href="#pinia" aria-hidden="true">#</a> pinia</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// install</span>
npm install pinia
<span class="token comment">// persist</span>
npm install pinia<span class="token operator">-</span>plugin<span class="token operator">-</span>persist
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在<code>store/index.ts</code>中新增<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> piniaPersist <span class="token keyword">from</span> <span class="token string">&#39;pinia-plugin-persist&#39;</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
store<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>piniaPersist<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>在<code>store/user.ts</code>中新增<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 持久化存储的策略</span>
<span class="token literal-property property">persist</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">enabled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> 
  <span class="token literal-property property">strategies</span><span class="token operator">:</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">storage</span><span class="token operator">:</span> localStorage<span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="基于vite的rollup配置问题" tabindex="-1"><a class="header-anchor" href="#基于vite的rollup配置问题" aria-hidden="true">#</a> 基于vite的rollup配置问题</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">build</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rollupOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">input</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;app01/index.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// 当配置了file选项之后，必须手动将dir置为null，否则vite会有个默认值，导致</span>
        <span class="token comment">// dir和file同时有值，从而导致rollup报错</span>
        <span class="token literal-property property">dir</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token string">&#39;dist/bundle.js&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),i=[p];function l(o,c){return n(),a("div",null,i)}const d=s(t,[["render",l],["__file","vvap.html.vue"]]);export{d as default};
