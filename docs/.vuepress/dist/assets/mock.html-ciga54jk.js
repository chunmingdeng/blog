import{_ as e,r as t,o,c,a as n,b as a,d as p,f as r}from"./app-5uqBhi11.js";const i={},l=r(`<h1 id="mock" tabindex="-1"><a class="header-anchor" href="#mock" aria-hidden="true">#</a> mock</h1><hr><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> summary</h2><blockquote><p>mockjs相当于拦截了请求，这些请求在浏览器的XHR中是看不到的</p></blockquote><h2 id="基于vuecli-3-0" tabindex="-1"><a class="header-anchor" href="#基于vuecli-3-0" aria-hidden="true">#</a> 基于vuecli 3.0-</h2><blockquote><p>\bvue早期版本的\bmock使用</p></blockquote><p>1.<code>npm install mockjs</code>.<br> 2.在main.js同级新建一个mock directory，在该directory下新建一个index.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Mock <span class="token keyword">from</span> <span class="token string">&#39;mockjs&#39;</span>

Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span> <span class="token string">&#39;/mock/data&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> <span class="token string-property property">&#39;data|1-10&#39;</span><span class="token operator">:</span><span class="token number">10</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span> <span class="token string">&#39;/mock/data1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> <span class="token string-property property">&#39;data|10&#39;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string-property property">&#39;age|1-100&#39;</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.在main.js中引入</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;./mock/index.js&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="基于vuecli-3-0-1" tabindex="-1"><a class="header-anchor" href="#基于vuecli-3-0-1" aria-hidden="true">#</a> 基于vuecli 3.0+</h2>`,11),u={href:"https://www.cnblogs.com/canulook/p/9995903.html",target:"_blank",rel:"noopener noreferrer"},d=n("blockquote",null,[n("p",null,"但是实际使用的时候可以完全和3.0-的版本一致的使用方法就可以")],-1);function k(m,h){const s=t("ExternalLinkIcon");return o(),c("div",null,[l,n("blockquote",null,[n("p",null,[a("网上有些配置方案需要在webpack\b的devServer选项中配置before选项 "),n("a",u,[a("link"),p(s)])])]),d])}const b=e(i,[["render",k],["__file","mock.html.vue"]]);export{b as default};
