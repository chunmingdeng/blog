import{_ as n,o as s,c as a,f as t}from"./app-5uqBhi11.js";const p={},o=t(`<h1 id="antv" tabindex="-1"><a class="header-anchor" href="#antv" aria-hidden="true">#</a> antv</h1><h2 id="problems" tabindex="-1"><a class="header-anchor" href="#problems" aria-hidden="true">#</a> problems</h2><ol><li>自定义组件的校验问题</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>a<span class="token operator">-</span>input<span class="token operator">-</span>group compact<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>a<span class="token operator">-</span>input
      v<span class="token operator">-</span>model<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">&quot;symbol&quot;</span>
      <span class="token operator">:</span>placeholder<span class="token operator">=</span><span class="token string">&quot;\`\${$attrs.placeholder ?? &#39;请输入或生成标识&#39;}\`&quot;</span>
      <span class="token operator">:</span>maxlength<span class="token operator">=</span><span class="token string">&quot;20&quot;</span>
      <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">&quot;{ width: &#39;calc(100% - 60px)&#39; }&quot;</span>
      @change<span class="token operator">=</span><span class="token string">&quot;change&quot;</span>
    <span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">-</span>input<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>a<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">&quot;getProjectUuid&quot;</span> style<span class="token operator">=</span><span class="token string">&quot;width: 60px&quot;</span><span class="token operator">&gt;</span>生成<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">-</span>button<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">-</span>input<span class="token operator">-</span>group<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>script setup lang<span class="token operator">=</span><span class="token string">&quot;ts&quot;</span><span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getUuid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/index&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useVModel <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useInjectFormItemContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;ant-design-vue/lib/form&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> FormItemExpose <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;ant-design-vue/lib/form/FormItem&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> currentIns <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">modelValue</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// onFieldChange只能在input 的_input事件触发时触发有效，在下面个getProjectUuid中出发无效，所以需要获取formItem暴露的具体onFieldChange方法来触发校验</span>
  formItemContext<span class="token punctuation">.</span><span class="token function">onFieldChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> defineProps<span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> emits <span class="token operator">=</span> <span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;update:modelValue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;change&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> symbol <span class="token operator">=</span> <span class="token function">useVModel</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> <span class="token string">&#39;modelValue&#39;</span><span class="token punctuation">,</span> emits<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> formItemContext <span class="token operator">=</span> <span class="token function">useInjectFormItemContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 遍历parent找到formItem组件，触发校验</span>
<span class="token keyword">const</span> getParentFormItemExpose <span class="token operator">=</span> <span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">FormItemExpose</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>source<span class="token punctuation">.</span>type<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;AFormItem&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> source<span class="token punctuation">.</span>exposed<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getParentFormItemExpose</span><span class="token punctuation">(</span>source<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">getProjectUuid</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  symbol<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">getUuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> formItemExpose <span class="token operator">=</span> <span class="token function">getParentFormItemExpose</span><span class="token punctuation">(</span>currentIns<span class="token punctuation">)</span><span class="token punctuation">;</span>
  formItemExpose<span class="token punctuation">.</span><span class="token function">onFieldChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>style scoped<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),e=[o];function c(l,r){return s(),a("div",null,e)}const u=n(p,[["render",c],["__file","base.html.vue"]]);export{u as default};
