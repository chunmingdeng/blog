import{_ as o,r as p,o as c,c as l,a as n,b as s,d as e,f as t}from"./app-5uqBhi11.js";const i={},r=n("h1",{id:"typescript",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#typescript","aria-hidden":"true"},"#"),s(" TypeScript")],-1),u={href:"https://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.tslang.cn/docs/home.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/basarat/typescript-book/",target:"_blank",rel:"noopener noreferrer"},m=t(`<hr><h2 id="_1-command-line-use-ts" tabindex="-1"><a class="header-anchor" href="#_1-command-line-use-ts" aria-hidden="true">#</a> 1.command line use ts</h2><ul><li><code>npm install typescript ts-loader</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// install typescript in global enviorment</span>
npm install typescript <span class="token operator">-</span>g
<span class="token comment">// create tsconfig.json</span>
tsc <span class="token operator">--</span>init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-1编译上下文" tabindex="-1"><a class="header-anchor" href="#_1-1编译上下文" aria-hidden="true">#</a> 1.1编译上下文</h3><blockquote><p>在项目根目录下创建tsconfig.json，ts会默认使用其配置来编译ts文件；</p></blockquote><ul><li>例如：(指定了tsc要编译的文件以及要忽略的文件)<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;files&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;./some/file.ts&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;exclude&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;./folder/**/*.spec.ts&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;./folder/someSubFolder&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// 指定typescript到哪里去读取类型文件</span>
        <span class="token property">&quot;typeRoot&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h4><ul><li>在.d.ts文件中使用<code>export default</code>的时候，需要在<code>ts.config.json</code>文件中配置<code>esMpoduleInterop: true</code></li></ul><h3 id="_1-2声明空间" tabindex="-1"><a class="header-anchor" href="#_1-2声明空间" aria-hidden="true">#</a> 1.2声明空间</h3><h4 id="类型声明空间" tabindex="-1"><a class="header-anchor" href="#类型声明空间" aria-hidden="true">#</a> 类型声明空间</h4><h4 id="declare" tabindex="-1"><a class="header-anchor" href="#declare" aria-hidden="true">#</a> declare</h4><pre><code>\`\`\`ts
// object with properties
declare namespace XXX {}
// global function
declare function XXX():voide;
// global variables
declare var XXX:string;
// class
declare class XXX {}
//
declare module XXX {}
\`\`\`
</code></pre><h2 id="报错相关" tabindex="-1"><a class="header-anchor" href="#报错相关" aria-hidden="true">#</a> 报错相关</h2>`,14),v=n("code",null,".vue",-1),b=n("code",null,".jsx",-1),h=n("code",null,"JSX.Element",-1),g={href:"https://blog.csdn.net/weixin_44691608/article/details/119518370",target:"_blank",rel:"noopener noreferrer"},f=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// *.vue 中的script lang=&#39;ts&#39; setup</span>
<span class="token comment">// 这种写法，在.ts文件中没有问题，但是在上面两种文件中，formatTreeData变量会被认为是一个JSX.Element</span>
<span class="token keyword">const</span> formatTreeData <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> cf<span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token keyword">undefined</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...sdfsd</span>
<span class="token punctuation">}</span>
<span class="token comment">// 正确的写法是在泛型定义末尾加一个逗号</span>
<span class="token keyword">const</span> formatTreeData <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> cf<span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token keyword">undefined</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),_=t(`<li><p>函数有必须参数，但是用不到</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 例如UI框架定义的分页插件的change事件，有page，size两个参数，但是我们当前只需用到后者</span>
<span class="token comment">// 普通写法</span>
<span class="token keyword">const</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">page<span class="token punctuation">,</span> size</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// ts校验会提示page定义了但是未使用</span>

<span class="token comment">// 正常写法</span>
<span class="token keyword">const</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">_page<span class="token punctuation">,</span> size</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// 以_开头，ts会不进行必要性校验</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>导入语句报错（可能是未声明模块方法）</p></li>`,2),y=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// For Node/CommonJS</span>
declare <span class="token keyword">function</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">path</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
<span class="token comment">// For RequireJS/AMD</span>
declare <span class="token keyword">function</span> <span class="token function">define</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args<span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>cant find module ***</code></li></ul><blockquote><p>没有声明文件描述代码库</p></blockquote><ol><li><code>npm install -s @types/***</code>, 这种只针对已经再@type中有的代码库</li><li>单独声明*.d.ts文件<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 这里以在ts中使用微信的js-sdk为例</span>
wx<span class="token punctuation">.</span><span class="token function">chooseImage</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// Error：找不到名称“wx”。ts(2304)</span>
 count<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 默认9</span>
 sizeType<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;original&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;compressed&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
 sourceType<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;album&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;camera&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
 <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">var</span> localIds <span class="token operator">=</span> res<span class="token punctuation">.</span>localIds<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// ts校验会提示wx变量的问题，这时候需要单独在声明wx这个变量，在变量声明文件中加上下面这行。</span>
declare <span class="token keyword">var</span> <span class="token literal-property property">wx</span><span class="token operator">:</span> any<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,4);function q(x,w){const a=p("ExternalLinkIcon");return c(),l("div",null,[r,n("p",null,[n("a",u,[s("offical website link(en)"),e(a)]),n("a",d,[s("offical website link(cz)"),e(a)]),n("a",k,[s("《TypeScript Deep Dive》"),e(a)])]),m,n("ul",null,[n("li",null,[n("p",null,[s("在"),v,s("文件或者"),b,s("文件中写ts，一旦涉及到泛型，可能会导致解析成"),h,s("，"),n("a",g,[s("解决方案"),e(a)])]),f]),_]),y])}const X=o(i,[["render",q],["__file","ts.html.vue"]]);export{X as default};
