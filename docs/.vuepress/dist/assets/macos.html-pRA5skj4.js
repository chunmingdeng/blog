import{_ as i,r as n,o as t,c as s,a as e,b as l,d as o,f as r}from"./app-5uqBhi11.js";const c={},d=e("h1",{id:"macos-terminal",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#macos-terminal","aria-hidden":"true"},"#"),l(" macos terminal")],-1),h=e("li",null,"mkdir <fileName> #\b创建directory",-1),u=e("li",null,"sudo rm -r -f <fileName> #删除directory",-1),p=e("li",null,[e("code",null,"cat <file>"),l(" # 查看文件")],-1),m=e("code",null,"grep",-1),_={href:"https://www.jianshu.com/p/ca88e6ef504d",target:"_blank",rel:"noopener noreferrer"},x=r('<h3 id="进程" tabindex="-1"><a class="header-anchor" href="#进程" aria-hidden="true">#</a> 进程</h3><ul><li><code>sudo lsof -i :&lt;port&gt;</code> # 查看当前端口的\b进程</li><li><code>sudo kill -9 &lt;port&gt;</code> # kill port</li><li><code>netstat -AaLlnW</code> # 查看当前电脑占用的端口</li></ul><h3 id="打包" tabindex="-1"><a class="header-anchor" href="#打包" aria-hidden="true">#</a> 打包</h3><ul><li><code>tar -cf &lt;fileName&gt;.tar *</code> #打包当前文件夹下的所有文件</li></ul><h3 id="chrome" tabindex="-1"><a class="header-anchor" href="#chrome" aria-hidden="true">#</a> chrome</h3><ul><li><p>打开一个非安全的chrome浏览器，并指定非安全\b目录<br><code>open -n /Applications/Google\\ Chrome.app/ --args --disable-web-security --user-data-dir=/Users/LeoLee/Documents/MyChromeDevUserData </code></p><p><code>open -n /Applications/Google\\ Chrome.app/ --args --disable-web-security --user-data-dir=/Users/chunmingdeng/personalProject/ThreeJs/img</code></p></li><li><p>打开一个可以debugger的浏览器 <code>open -n /Applications/Google\\ Chrome.app/ --args --remote-debugging-port=9222</code></p></li></ul><h3 id="man命令" tabindex="-1"><a class="header-anchor" href="#man命令" aria-hidden="true">#</a> man命令</h3><blockquote><p>man是lunix下的manul（手册）命令缩写<br> eg:<code>man ls</code></p></blockquote><h3 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> linux</h3><ul><li><code>ll/ls -l</code><ul><li>drwx------ 2 Guest users 1024 Nov 21 21:05 Mail</li><li>第一个栏位，表示文件的属性。Linux的文件基本上分为三个属性：可读（r），可写（w），可执行（x）。但是这里有十个格子可以添（具体程序实现时，实际上是十个bit位）。第一个小格是特殊表示格，表示目录或连结文件等等，d表示目录，例如drwx------;l表示连结文件，如lrwxrwxrwx;如果是以一横“-”表示，则表示这是文件。其余剩下的格子就以每3格为一个单位。因为Linux是多用户多任务系统，所以一个文件可能同时被许多人使用，所以我们一定要设好每个文件的权限，其文件的权限位置排列顺序是（以-rwxr-xr-x为例）：　　 rwx(Owner)r-x(Group)r-x(Other)　　 这个例子表示的权限是：使用者自己可读，可写，可执行；同一组的用户可读，不可写，可执行；其它用户可读，不可写，可执行。另外，有一些程序属性的执行部分不是X,而是S,这表示执行这个程序的使用者，临时可以有和拥有者一样权力的身份来执行该程序。一般出现在系统管理之类的指令或程序，让使用者执行时，拥有root身份。</li><li>第二个栏位，表示文件个数。如果是文件的话，那这个数目自然是1了，如果是目录的话，那它的数目就是该目录中的文件个数了。</li><li>第三个栏位，表示该文件或目录的拥有者。若使用者目前处于自己的Home,那这一栏大概都是它的账号名称。</li><li>第四个栏位，表示所属的组（group）。每一个使用者都可以拥有一个以上的组，不过大部分的使用者应该都只属于一个组，只有当系统管理员希望给予某使用者特殊权限时，才可能会给他另一个组。</li><li>第五栏位，表示文件大小。文件大小用byte来表示，而空目录一般都是1024byte，你当然可以用其它参数使文件显示的单位不同，如使用ls –k就是用kb莱显示一个文件的大小单位，不过一般我们还是以byte为主。</li><li>第六个栏位，表示创建日期。以“月，日，时间”的格式表示，如Aug 15 5:46表示8月15日早上5:46分。</li><li>第七个栏位，表示文件名。我们可以用ls –a显示隐藏的文件名。</li></ul></li></ul><h3 id="ps" tabindex="-1"><a class="header-anchor" href="#ps" aria-hidden="true">#</a> ps</h3>',11),b=e("br",null,null,-1),f={href:"https://www.cnblogs.com/tig666666/p/7251284.html",target:"_blank",rel:"noopener noreferrer"},g=r('<ul><li>a 显示所有进程</li><li>-a 显示同一终端下的所有程序</li><li>u 显示指定用户的所有进程</li><li>-au 显示较详细的资讯</li><li>-aux 显示所有包含其他使用者的行程</li></ul><h3 id="nohup" tabindex="-1"><a class="header-anchor" href="#nohup" aria-hidden="true">#</a> nohup</h3><blockquote><p>nohup(np hang up) 非挂起执行每个命令</p></blockquote><ul><li>一般命令以<code> &amp;</code>结尾表示后台运行命令，但是terminal窗口关闭会终止</li><li><code>nohup &lt;command&gt; &amp;</code>让命令在后台运行，即时terminal窗口关闭也不会终止</li></ul><h3 id="shell-syntax-脚本语法" tabindex="-1"><a class="header-anchor" href="#shell-syntax-脚本语法" aria-hidden="true">#</a> shell syntax(脚本语法)</h3>',5),k={href:"https://zhuanlan.zhihu.com/p/83338411?utm_source=qq",target:"_blank",rel:"noopener noreferrer"};function w(y,N){const a=n("ExternalLinkIcon");return t(),s("div",null,[d,e("ul",null,[h,u,p,e("li",null,[m,l(),e("a",_,[l("link"),o(a)])])]),x,e("blockquote",null,[e("p",null,[l("ps (process status)， 用来查看进程的状态"),b,e("a",f,[l("link"),o(a)])])]),g,e("p",null,[e("a",k,[l("link"),o(a)])])])}const L=i(c,[["render",w],["__file","macos.html.vue"]]);export{L as default};
