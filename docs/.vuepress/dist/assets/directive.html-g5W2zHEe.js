import{_ as n,o as s,c as a,f as t}from"./app-5uqBhi11.js";const p={},e=t(`<h1 id="指令" tabindex="-1"><a class="header-anchor" href="#指令" aria-hidden="true">#</a> 指令</h1><blockquote><p><code>vue</code>自定义指令需要了解基础内容</p><ol><li>指令的入参</li></ol><ul><li><code>el</code>：指令绑定的元素，可用于直接操作DOM</li><li><code>binding</code>：vue包装的一个对象，包含以下树形 <ul><li><code>value</code>: 指令的值。如v-test=&#39;1 + 1&#39;,值是2。普通定义的可以是一个函数。</li><li><code>oldValue</code>： 之前的值，仅在 <code>beforeUpdate</code> 和 <code>updated</code> 中可用。无论值是否更改，它都可用。</li><li><code>arg</code>：传递给指令的参数 (如果有的话)。例如在 <code>v-my-directive:foo</code> 中，参数是 &quot;foo&quot;。</li><li><code>modifier</code>s：一个包含修饰符的对象 (如果有的话)。例如在 v-my-directive. foo.bar 中，修饰符对象是 { foo: true, bar: true }。</li><li><code>instance</code>：使用该指令的组件实例。</li><li><code>dir</code>：指令的定义对象。</li></ul></li><li><code>vnode</code>：代表绑定元素的底层 VNode。</li><li><code>prevNode</code>：之前的渲染中代表指令所绑定元素的 VNode。仅在 beforeUpdate 和 updated 钩子中可用。</li></ul></blockquote><hr><h4 id="v-clickoutside" tabindex="-1"><a class="header-anchor" href="#v-clickoutside" aria-hidden="true">#</a> v-clickoutside</h4><blockquote><p>基本思路，判断点击的元素是否是绑定元素的子元素或者自身，如果是，则是内部点击，如果不是，则是外部点击</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> on <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/utils/domUtils&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> isServer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/utils/is&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> nodeList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> clickStart <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isServer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">on</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> <span class="token string">&#39;mousedown&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>startClick <span class="token operator">=</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">on</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> <span class="token string">&#39;mouseup&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">{</span> documentHandler <span class="token punctuation">}</span> <span class="token keyword">of</span> nodeList<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">documentHandler</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> startClick<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">createDocumentHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> excludes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>binding<span class="token punctuation">.</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    excludes <span class="token operator">=</span> binding<span class="token punctuation">.</span>arg<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    excludes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>binding<span class="token punctuation">.</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">mouseupEvent<span class="token punctuation">,</span> mousedownEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> mouseUpTarget <span class="token operator">=</span> mouseupEvent<span class="token punctuation">.</span>target<span class="token punctuation">;</span>
    <span class="token keyword">const</span> mouseDownTarget <span class="token operator">=</span> mousedownEvent<span class="token punctuation">.</span>target<span class="token punctuation">;</span>
    <span class="token keyword">const</span> isBound <span class="token operator">=</span> <span class="token operator">!</span>binding <span class="token operator">||</span> <span class="token operator">!</span>binding<span class="token punctuation">.</span>instance<span class="token punctuation">;</span>
    <span class="token keyword">const</span> isTargetExists <span class="token operator">=</span> <span class="token operator">!</span>mouseUpTarget <span class="token operator">||</span> <span class="token operator">!</span>mouseDownTarget<span class="token punctuation">;</span>
    <span class="token comment">// if is the children of HtmlElement the directive binded</span>
    <span class="token keyword">const</span> isContainedByEl <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>mouseUpTarget<span class="token punctuation">)</span> <span class="token operator">||</span> el<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>mouseDownTarget<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// if is self</span>
    <span class="token keyword">const</span> isSelf <span class="token operator">=</span> el <span class="token operator">===</span> mouseUpTarget<span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>
      isBound <span class="token operator">||</span>
      isTargetExists <span class="token operator">||</span>
      isContainedByEl <span class="token operator">||</span>
      isContainedByEl <span class="token operator">||</span>
      isSelf
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    binding<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> clickOutSide <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">beforeMount</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    nodeList<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">documentHandler</span><span class="token operator">:</span> <span class="token function">createDocumentHandler</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> binding<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">bindingFn</span><span class="token operator">:</span> binding<span class="token punctuation">.</span>value
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">updated</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    nodeList<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">documentHandler</span><span class="token operator">:</span> <span class="token function">createDocumentHandler</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> binding<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">bindingFn</span><span class="token operator">:</span> binding<span class="token punctuation">.</span>value
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">unmounted</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> binding</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    nodeList<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// usage</span>
<span class="token keyword">import</span> clickOutside <span class="token keyword">from</span> <span class="token string">&#39;*&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">directives</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    clickOutside<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","directive.html.vue"]]);export{r as default};
