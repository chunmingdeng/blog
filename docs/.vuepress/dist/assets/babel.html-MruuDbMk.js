import{_ as t,r as p,o as c,c as l,a as n,d as o,b as s,f as a}from"./app-5uqBhi11.js";const i={},r=n("h1",{id:"babel",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#babel","aria-hidden":"true"},"#"),s(" babel")],-1),u={href:"https://babeljs.io",target:"_blank",rel:"noopener noreferrer"},d=n("code",null,"babel",-1),b=n("br",null,null,-1),k=n("h2",{id:"定义",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#定义","aria-hidden":"true"},"#"),s(" 定义")],-1),v=n("p",null,[n("code",null,"babel"),s("是一个代码转换工具，可以用来将新版本的语法转换为旧版本的语法")],-1),m=n("h2",{id:"如何配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#如何配置","aria-hidden":"true"},"#"),s(" 如何配置")],-1),h=a(`<li>安装babel<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm install @babel<span class="token operator">/</span>core @babel<span class="token operator">/</span>cli @babel<span class="token operator">/</span>preset<span class="token operator">-</span>env
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,1),g={href:"https://babeljs.io/docs/en/configuration#babelrcjson",target:"_blank",rel:"noopener noreferrer"},_=a(`<ul><li><code>babel</code>有多种配置方式，<code>babel.config.*</code> <code>.babelrc</code> <code>babelrc.*</code> <code>package.json</code></li><li><code>babel.config.json</code><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@babel/preset-env&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>babel.config.js</code><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  api<span class="token punctuation">.</span><span class="token function">cache</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> presets <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token operator">...</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> plugins <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token operator">...</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    presets<span class="token punctuation">,</span>
    plugins
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>.babelrc</code>&amp;<code>.babelrc.json</code><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@babel/preset-env&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,1),f=a(`<div class="custom-container warning"><p class="custom-container-title">关于不设置target（上面的例子就是没有设置target，都会默认转为es5）</p><p>When no targets are specified: Babel will assume you are targeting the oldest browsers possible. For example, @babel/preset-env will transform all ES2015-ES2020 code to be ES5 compatible.</p></div><h2 id="转义命令" tabindex="-1"><a class="header-anchor" href="#转义命令" aria-hidden="true">#</a> 转义命令</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// dir structure</span>
<span class="token operator">|</span><span class="token operator">--</span>root
    <span class="token operator">|</span><span class="token operator">--</span>src
        <span class="token operator">|</span><span class="token operator">--</span>a<span class="token punctuation">.</span>js
        <span class="token operator">|</span><span class="token operator">--</span>test
            <span class="token operator">|</span><span class="token operator">--</span>b<span class="token punctuation">.</span>js
<span class="token comment">// 按目录编译</span>
$ <span class="token punctuation">.</span><span class="token operator">/</span>node_module<span class="token operator">/</span><span class="token punctuation">.</span>bin<span class="token operator">/</span>babel <span class="token punctuation">.</span><span class="token operator">/</span>src <span class="token operator">-</span>d <span class="token punctuation">.</span><span class="token operator">/</span>lib

<span class="token comment">// 编译指定文件</span>
$ <span class="token punctuation">.</span><span class="token operator">/</span>node_module<span class="token operator">/</span><span class="token punctuation">.</span>bin<span class="token operator">/</span>babel <span class="token punctuation">.</span><span class="token operator">/</span>src<span class="token operator">/</span>a<span class="token punctuation">.</span>js <span class="token operator">-</span>o <span class="token punctuation">.</span><span class="token operator">/</span>src<span class="token operator">/</span>b<span class="token punctuation">.</span>js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function j(x,q){const e=p("ExternalLinkIcon");return c(),l("div",null,[r,n("blockquote",null,[n("p",null,[n("a",u,[d,o(e)]),s(" is one code transform plugin"),b,s(" 代码转译工具")])]),k,v,m,n("ul",null,[h,n("li",null,[n("a",g,[s("配置"),o(e)]),_])]),f])}const w=t(i,[["render",j],["__file","babel.html.vue"]]);export{w as default};
