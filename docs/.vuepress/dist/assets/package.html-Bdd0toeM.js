import{_ as e,r as p,o as t,c as o,a as n,b as s,d as l,f as c}from"./app-5uqBhi11.js";const i={},r=n("h1",{id:"webpack打包优化",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#webpack打包优化","aria-hidden":"true"},"#"),s(" webpack打包优化")],-1),u=n("h2",{id:"如何优化",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#如何优化","aria-hidden":"true"},"#"),s(" 如何优化")],-1),d={href:"https://segmentfault.com/a/1190000019395237?utm_source=tag-newest",target:"_blank",rel:"noopener noreferrer"},k=c(`<h3 id="css-split" tabindex="-1"><a class="header-anchor" href="#css-split" aria-hidden="true">#</a> css split</h3><ul><li>在webpack.prod.js中的css-loader最前面加上<code>MiniCssExtractPlugin.loader</code>单独提取css</li><li>plugins选项中配置<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;[name].[contenthash:8].css&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">chunkFilename</span><span class="token operator">:</span> <span class="token string">&#39;[id].[contenthash:8].css&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="code-split" tabindex="-1"><a class="header-anchor" href="#code-split" aria-hidden="true">#</a> code split</h3><h4 id="webpack4自带的code-split" tabindex="-1"><a class="header-anchor" href="#webpack4自带的code-split" aria-hidden="true">#</a> webpack4自带的code-split</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">splitChunks</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token string">&#39;all&#39;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新打包，发现新生成了一个vendor.js文件，公用的一些代码就被打包进去了。 但是这种方式只对简单的项目有用，一旦项目的复杂度上升到一定程度，webpack每次都需要去分析哪些包是公共库，会浪费大量的时间，打包速度就急剧下降。</p><h4 id="dll-package" tabindex="-1"><a class="header-anchor" href="#dll-package" aria-hidden="true">#</a> dll-package</h4><ul><li>新建webpack.dll.js<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> CleanWebpackPlugin <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;clean-webpack-plugin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">vendors</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;react&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;react-dom&#39;</span><span class="token punctuation">]</span> <span class="token comment">// 手动指定打包哪些库</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;[name].[hash:8].dll.js&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./dll&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token literal-property property">library</span><span class="token operator">:</span> <span class="token string">&#39;[name]&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token keyword">new</span> <span class="token class-name">CleanWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DllPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./dll/[name].manifest.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 生成对应的manifest.json，给webpack打包用</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;[name]&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>添加一条命令:<code>&quot;build:dll&quot;: &quot;webpack --config webpack.dll.js&quot;</code></li><li>运行dll打包<code>npm run build:dll</code>，项目下会生成一个dll目录，里面包含了vendors.[*].dll.js文件，venders.manifest.json文件。</li><li>修改webpack.prod.js<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DllReferencePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">manifest</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./dll/vendors.manifest.json&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 读取dll打包后的manifest.json，分析哪些代码跳过</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>配置add-asset-html-webpack-plugin到webpack.prod.js中，将dll提取出的公共包引用自动新增到页面</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">AddAssetHtmlPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filepath</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./dll/*.dll.js&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9);function v(m,b){const a=p("ExternalLinkIcon");return t(),o("div",null,[r,u,n("p",null,[n("a",d,[s("相关资料"),l(a)])]),k])}const g=e(i,[["render",v],["__file","package.html.vue"]]);export{g as default};
