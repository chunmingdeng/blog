import{_ as a,r as d,o as i,c,a as o,b as e,d as n,e as r,f as t}from"./app-5uqBhi11.js";const s={},h=t('<h1 id="mongo" tabindex="-1"><a class="header-anchor" href="#mongo" aria-hidden="true">#</a> mongo</h1><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> install</h2><h4 id="下载方式" tabindex="-1"><a class="header-anchor" href="#下载方式" aria-hidden="true">#</a> 下载方式</h4>',3),u={href:"https://www.runoob.com/mongodb/mongodb-osx-install.html",target:"_blank",rel:"noopener noreferrer"},b=o("blockquote",null,[o("p",null,"需要手动配置~/.bash_profile的配置")],-1),m=o("ul",null,[o("li",null,[o("code",null,"sudo curl -O https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-4.0.9.tgz")])],-1),_={href:"https://www.jianshu.com/p/d929436a4b7c",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.cnblogs.com/zgaspnet/p/11769704.html",target:"_blank",rel:"noopener noreferrer"},p=o("blockquote",null,[o("p",null,"homebrew安装会自动配置~/.bash_profile文件中的配置")],-1),f=o("ul",null,[o("li",null,[o("code",null,"brew tap mongodb/brew")]),o("li",null,[o("code",null,"brew install mongodb-community@4.2")])],-1),k=t('<h4 id="基础配置" tabindex="-1"><a class="header-anchor" href="#基础配置" aria-hidden="true">#</a> 基础配置</h4><blockquote><p>关于mkdir /data/db 报错的问题，在catalina系统下，根目录已经是只读的了，不支持创建，可以根据自己的情况在别的目录新建数据库的保存文件夹</p></blockquote><ol><li>数据库文件保存路径配置 <ul><li><code>mongod --dbpath &lt;*/data/db&gt;</code> 需要提前新建好*/data/db文件夹</li></ul></li><li>启动数据库 <ul><li><code>mongod</code></li><li><code>mongod --config &lt;config文件路径&gt;</code> 根据制定配置文件启动数据库</li><li>1.也就是指定数据库保存目录启动数据库</li></ul></li></ol><h2 id="syntax" tabindex="-1"><a class="header-anchor" href="#syntax" aria-hidden="true">#</a> syntax</h2><ol><li>database</li></ol><ul><li><code>use &lt;dataBaseName&gt;</code> 切换数据库</li><li><code>show dbs</code> 查看所有数据库</li><li><code>db.dropDatabase()</code> 删除当前数据库</li></ul><ol start="2"><li>collection</li></ol><blockquote><p>当直接向不存在的collection中insert数据时，会自动创建collection</p></blockquote><ul><li><code>db.createCollection(&lt;collectionname&gt;,&lt;options&gt;)</code> 创建集合（表）</li><li><code>show collections</code> 查看所有集合</li></ul>',9),x=o("ol",{start:"3"},[o("li",null,"document")],-1),w=o("ul",null,[o("li",null,[o("code",null,"db.<collectionName>.insert(<document>)"),e(" 创建文档")]),o("li",null,[o("code",null,"db.<collectionName>.find()"),e(" 查看文档")])],-1),N=o("h4",{id:"node-mongo",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#node-mongo","aria-hidden":"true"},"#"),e(" node & mongo")],-1),q={href:"https://mongodb.github.io/node-mongodb-native/",target:"_blank",rel:"noopener noreferrer"};function V(v,y){const l=d("ExternalLinkIcon");return i(),c("div",null,[h,o("ol",null,[o("li",null,[e("curl下载 "),o("a",u,[e("link"),n(l)]),b,m]),o("li",null,[e("homebrew下载"),o("a",_,[e("link"),n(l)]),e(),o("a",g,[e("link"),n(l)]),p,f])]),k,r(" - `db.<collectionName>.drop()`  删除集合（表） "),x,w,N,o("p",null,[e("nodejs mongodb 第三方库的api"),o("a",q,[e("link"),n(l)])])])}const C=a(s,[["render",V],["__file","mongodb.html.vue"]]);export{C as default};
