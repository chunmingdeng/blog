import{_ as e,r as t,o,c as p,a as n,b as a,d as c,f as r}from"./app-5uqBhi11.js";const l={},i=n("h1",{id:"object",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#object","aria-hidden":"true"},"#"),a(" object")],-1),u={id:"object-create-link",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#object-create-link","aria-hidden":"true"},"#",-1),d={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create",target:"_blank",rel:"noopener noreferrer"},b=r(`<blockquote><p>以某个对象作为原型创建一个新的对象，第二个参数可以直接定义当前对象的属性</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;daniel&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">22</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// a =&gt; {}</span>
<span class="token comment">// 此时a是个空对象，但是第一个参数的所有属性都能在a的原型链上访问到</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;daniel&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">22</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;lilisi&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// b =&gt; {name: &#39;lilisi&#39;}</span>
<span class="token comment">// 第二个参数的是和Object.defineProperties()的第二个参数一样，直接定义当前对象的属性</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function m(_,v){const s=t("ExternalLinkIcon");return o(),p("div",null,[i,n("h2",u,[k,a(" Object.create "),n("a",d,[a("link"),c(s)])]),b])}const f=e(l,[["render",m],["__file","object.html.vue"]]);export{f as default};
